{"version":3,"sources":["Prefecture.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PrefectureSelector","props","prefectures","prefectureCheckboxes","map","prefecture","Fragment","prefName","type","prefCode","App","useState","setPrefectures","useEffect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAcaA,EAAsC,SAACC,GAClD,GAA0B,OAAtBA,EAAMC,YACR,OAAO,wDAET,IAAMC,EAAuBF,EAAMC,YAAYE,KAAI,SAACC,GAAD,OACjD,eAAC,IAAMC,SAAP,WACE,gCAAQD,EAAWE,WACnB,uBAAOC,KAAK,eAFOH,EAAWI,aAKlC,OAAO,8BAAMN,KCAAO,G,MApBO,WAAO,IAAD,EACYC,mBAA8B,MAD1C,mBACnBT,EADmB,KACNU,EADM,KAU1B,OAPAC,qBAAU,WACRD,EAAe,CACb,CAAEH,SAAU,EAAGF,SAAU,sBACzB,CAAEE,SAAU,EAAGF,SAAU,0BAE1B,IAGD,sBAAKO,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,kHAEF,cAAC,EAAD,CAAoBZ,YAAaA,SCHxBa,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACnC,6BAAqBC,MACxB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACjCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5fd0b09b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Prefecture = {\n  prefCode: number;\n  prefName: string;\n};\n\ntype Props = {\n  prefectures: Prefecture[] | null;\n};\n\n/**\n * 都道府県チェックボックスリスト\n */\nexport const PrefectureSelector: React.FC<Props> = (props) => {\n  if (props.prefectures === null) {\n    return <p>Prefectures is nothing.</p>;\n  }\n  const prefectureCheckboxes = props.prefectures.map((prefecture) => (\n    <React.Fragment key={prefecture.prefCode}>\n      <label>{prefecture.prefName}</label>\n      <input type=\"checkbox\"></input>\n    </React.Fragment>\n  ));\n  return <div>{prefectureCheckboxes}</div>;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Prefecture, PrefectureSelector } from \"./Prefecture\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  const [prefectures, setPrefectures] = useState<Prefecture[] | null>(null);\n\n  useEffect(() => {\n    setPrefectures([\n      { prefCode: 1, prefName: \"北海道\" },\n      { prefCode: 2, prefName: \"青森県\" },\n    ]);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>都道府県別総人口推移グラフ</h1>\n      </header>\n      <PrefectureSelector prefectures={prefectures}></PrefectureSelector>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import(\"web-vitals\").then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}